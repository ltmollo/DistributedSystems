// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculator.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_calculator_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_calculator_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_calculator_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_calculator_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_calculator_2eproto;
namespace calculator {
class ArithmeticOpArguments;
struct ArithmeticOpArgumentsDefaultTypeInternal;
extern ArithmeticOpArgumentsDefaultTypeInternal _ArithmeticOpArguments_default_instance_;
class ArithmeticOpResult;
struct ArithmeticOpResultDefaultTypeInternal;
extern ArithmeticOpResultDefaultTypeInternal _ArithmeticOpResult_default_instance_;
class ComplexArithmeticOpArguments;
struct ComplexArithmeticOpArgumentsDefaultTypeInternal;
extern ComplexArithmeticOpArgumentsDefaultTypeInternal _ComplexArithmeticOpArguments_default_instance_;
class ComplexArithmeticOpResult;
struct ComplexArithmeticOpResultDefaultTypeInternal;
extern ComplexArithmeticOpResultDefaultTypeInternal _ComplexArithmeticOpResult_default_instance_;
}  // namespace calculator
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace calculator {
enum OperationType : int {
  SUM = 0,
  AVG = 1,
  MIN = 2,
  MAX = 3,
  OperationType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OperationType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OperationType_IsValid(int value);
extern const uint32_t OperationType_internal_data_[];
constexpr OperationType OperationType_MIN = static_cast<OperationType>(0);
constexpr OperationType OperationType_MAX = static_cast<OperationType>(3);
constexpr int OperationType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
OperationType_descriptor();
template <typename T>
const std::string& OperationType_Name(T value) {
  static_assert(std::is_same<T, OperationType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OperationType_Name().");
  return OperationType_Name(static_cast<OperationType>(value));
}
template <>
inline const std::string& OperationType_Name(OperationType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OperationType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool OperationType_Parse(absl::string_view name, OperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationType>(
      OperationType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ComplexArithmeticOpResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.ComplexArithmeticOpResult) */ {
 public:
  inline ComplexArithmeticOpResult() : ComplexArithmeticOpResult(nullptr) {}
  ~ComplexArithmeticOpResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComplexArithmeticOpResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline ComplexArithmeticOpResult(const ComplexArithmeticOpResult& from) : ComplexArithmeticOpResult(nullptr, from) {}
  inline ComplexArithmeticOpResult(ComplexArithmeticOpResult&& from) noexcept
      : ComplexArithmeticOpResult(nullptr, std::move(from)) {}
  inline ComplexArithmeticOpResult& operator=(const ComplexArithmeticOpResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplexArithmeticOpResult& operator=(ComplexArithmeticOpResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComplexArithmeticOpResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComplexArithmeticOpResult* internal_default_instance() {
    return reinterpret_cast<const ComplexArithmeticOpResult*>(
        &_ComplexArithmeticOpResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ComplexArithmeticOpResult& a, ComplexArithmeticOpResult& b) { a.Swap(&b); }
  inline void Swap(ComplexArithmeticOpResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplexArithmeticOpResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComplexArithmeticOpResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ComplexArithmeticOpResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComplexArithmeticOpResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ComplexArithmeticOpResult& from) { ComplexArithmeticOpResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ComplexArithmeticOpResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.ComplexArithmeticOpResult"; }

 protected:
  explicit ComplexArithmeticOpResult(::google::protobuf::Arena* arena);
  ComplexArithmeticOpResult(::google::protobuf::Arena* arena, const ComplexArithmeticOpResult& from);
  ComplexArithmeticOpResult(::google::protobuf::Arena* arena, ComplexArithmeticOpResult&& from) noexcept
      : ComplexArithmeticOpResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResFieldNumber = 1,
  };
  // double res = 1;
  void clear_res() ;
  double res() const;
  void set_res(double value);

  private:
  double _internal_res() const;
  void _internal_set_res(double value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.ComplexArithmeticOpResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    double res_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ComplexArithmeticOpArguments final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.ComplexArithmeticOpArguments) */ {
 public:
  inline ComplexArithmeticOpArguments() : ComplexArithmeticOpArguments(nullptr) {}
  ~ComplexArithmeticOpArguments() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComplexArithmeticOpArguments(
      ::google::protobuf::internal::ConstantInitialized);

  inline ComplexArithmeticOpArguments(const ComplexArithmeticOpArguments& from) : ComplexArithmeticOpArguments(nullptr, from) {}
  inline ComplexArithmeticOpArguments(ComplexArithmeticOpArguments&& from) noexcept
      : ComplexArithmeticOpArguments(nullptr, std::move(from)) {}
  inline ComplexArithmeticOpArguments& operator=(const ComplexArithmeticOpArguments& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplexArithmeticOpArguments& operator=(ComplexArithmeticOpArguments&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComplexArithmeticOpArguments& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComplexArithmeticOpArguments* internal_default_instance() {
    return reinterpret_cast<const ComplexArithmeticOpArguments*>(
        &_ComplexArithmeticOpArguments_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ComplexArithmeticOpArguments& a, ComplexArithmeticOpArguments& b) { a.Swap(&b); }
  inline void Swap(ComplexArithmeticOpArguments* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplexArithmeticOpArguments* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComplexArithmeticOpArguments* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ComplexArithmeticOpArguments>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComplexArithmeticOpArguments& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ComplexArithmeticOpArguments& from) { ComplexArithmeticOpArguments::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ComplexArithmeticOpArguments* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.ComplexArithmeticOpArguments"; }

 protected:
  explicit ComplexArithmeticOpArguments(::google::protobuf::Arena* arena);
  ComplexArithmeticOpArguments(::google::protobuf::Arena* arena, const ComplexArithmeticOpArguments& from);
  ComplexArithmeticOpArguments(::google::protobuf::Arena* arena, ComplexArithmeticOpArguments&& from) noexcept
      : ComplexArithmeticOpArguments(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kArgsFieldNumber = 2,
    kOptypeFieldNumber = 1,
  };
  // repeated double args = 2;
  int args_size() const;
  private:
  int _internal_args_size() const;

  public:
  void clear_args() ;
  double args(int index) const;
  void set_args(int index, double value);
  void add_args(double value);
  const ::google::protobuf::RepeatedField<double>& args() const;
  ::google::protobuf::RepeatedField<double>* mutable_args();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_args() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_args();

  public:
  // .calculator.OperationType optype = 1;
  void clear_optype() ;
  ::calculator::OperationType optype() const;
  void set_optype(::calculator::OperationType value);

  private:
  ::calculator::OperationType _internal_optype() const;
  void _internal_set_optype(::calculator::OperationType value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.ComplexArithmeticOpArguments)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<double> args_;
    int optype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ArithmeticOpResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.ArithmeticOpResult) */ {
 public:
  inline ArithmeticOpResult() : ArithmeticOpResult(nullptr) {}
  ~ArithmeticOpResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ArithmeticOpResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline ArithmeticOpResult(const ArithmeticOpResult& from) : ArithmeticOpResult(nullptr, from) {}
  inline ArithmeticOpResult(ArithmeticOpResult&& from) noexcept
      : ArithmeticOpResult(nullptr, std::move(from)) {}
  inline ArithmeticOpResult& operator=(const ArithmeticOpResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArithmeticOpResult& operator=(ArithmeticOpResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArithmeticOpResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArithmeticOpResult* internal_default_instance() {
    return reinterpret_cast<const ArithmeticOpResult*>(
        &_ArithmeticOpResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ArithmeticOpResult& a, ArithmeticOpResult& b) { a.Swap(&b); }
  inline void Swap(ArithmeticOpResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArithmeticOpResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArithmeticOpResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ArithmeticOpResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArithmeticOpResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ArithmeticOpResult& from) { ArithmeticOpResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ArithmeticOpResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.ArithmeticOpResult"; }

 protected:
  explicit ArithmeticOpResult(::google::protobuf::Arena* arena);
  ArithmeticOpResult(::google::protobuf::Arena* arena, const ArithmeticOpResult& from);
  ArithmeticOpResult(::google::protobuf::Arena* arena, ArithmeticOpResult&& from) noexcept
      : ArithmeticOpResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResFieldNumber = 1,
  };
  // int32 res = 1;
  void clear_res() ;
  ::int32_t res() const;
  void set_res(::int32_t value);

  private:
  ::int32_t _internal_res() const;
  void _internal_set_res(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.ArithmeticOpResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t res_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ArithmeticOpArguments final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.ArithmeticOpArguments) */ {
 public:
  inline ArithmeticOpArguments() : ArithmeticOpArguments(nullptr) {}
  ~ArithmeticOpArguments() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ArithmeticOpArguments(
      ::google::protobuf::internal::ConstantInitialized);

  inline ArithmeticOpArguments(const ArithmeticOpArguments& from) : ArithmeticOpArguments(nullptr, from) {}
  inline ArithmeticOpArguments(ArithmeticOpArguments&& from) noexcept
      : ArithmeticOpArguments(nullptr, std::move(from)) {}
  inline ArithmeticOpArguments& operator=(const ArithmeticOpArguments& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArithmeticOpArguments& operator=(ArithmeticOpArguments&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArithmeticOpArguments& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArithmeticOpArguments* internal_default_instance() {
    return reinterpret_cast<const ArithmeticOpArguments*>(
        &_ArithmeticOpArguments_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ArithmeticOpArguments& a, ArithmeticOpArguments& b) { a.Swap(&b); }
  inline void Swap(ArithmeticOpArguments* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArithmeticOpArguments* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArithmeticOpArguments* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ArithmeticOpArguments>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArithmeticOpArguments& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ArithmeticOpArguments& from) { ArithmeticOpArguments::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ArithmeticOpArguments* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.ArithmeticOpArguments"; }

 protected:
  explicit ArithmeticOpArguments(::google::protobuf::Arena* arena);
  ArithmeticOpArguments(::google::protobuf::Arena* arena, const ArithmeticOpArguments& from);
  ArithmeticOpArguments(::google::protobuf::Arena* arena, ArithmeticOpArguments&& from) noexcept
      : ArithmeticOpArguments(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kArg1FieldNumber = 1,
    kArg2FieldNumber = 2,
  };
  // int32 arg1 = 1;
  void clear_arg1() ;
  ::int32_t arg1() const;
  void set_arg1(::int32_t value);

  private:
  ::int32_t _internal_arg1() const;
  void _internal_set_arg1(::int32_t value);

  public:
  // int32 arg2 = 2;
  void clear_arg2() ;
  ::int32_t arg2() const;
  void set_arg2(::int32_t value);

  private:
  ::int32_t _internal_arg2() const;
  void _internal_set_arg2(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.ArithmeticOpArguments)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t arg1_;
    ::int32_t arg2_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ArithmeticOpArguments

// int32 arg1 = 1;
inline void ArithmeticOpArguments::clear_arg1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arg1_ = 0;
}
inline ::int32_t ArithmeticOpArguments::arg1() const {
  // @@protoc_insertion_point(field_get:calculator.ArithmeticOpArguments.arg1)
  return _internal_arg1();
}
inline void ArithmeticOpArguments::set_arg1(::int32_t value) {
  _internal_set_arg1(value);
  // @@protoc_insertion_point(field_set:calculator.ArithmeticOpArguments.arg1)
}
inline ::int32_t ArithmeticOpArguments::_internal_arg1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.arg1_;
}
inline void ArithmeticOpArguments::_internal_set_arg1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arg1_ = value;
}

// int32 arg2 = 2;
inline void ArithmeticOpArguments::clear_arg2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arg2_ = 0;
}
inline ::int32_t ArithmeticOpArguments::arg2() const {
  // @@protoc_insertion_point(field_get:calculator.ArithmeticOpArguments.arg2)
  return _internal_arg2();
}
inline void ArithmeticOpArguments::set_arg2(::int32_t value) {
  _internal_set_arg2(value);
  // @@protoc_insertion_point(field_set:calculator.ArithmeticOpArguments.arg2)
}
inline ::int32_t ArithmeticOpArguments::_internal_arg2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.arg2_;
}
inline void ArithmeticOpArguments::_internal_set_arg2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arg2_ = value;
}

// -------------------------------------------------------------------

// ArithmeticOpResult

// int32 res = 1;
inline void ArithmeticOpResult::clear_res() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.res_ = 0;
}
inline ::int32_t ArithmeticOpResult::res() const {
  // @@protoc_insertion_point(field_get:calculator.ArithmeticOpResult.res)
  return _internal_res();
}
inline void ArithmeticOpResult::set_res(::int32_t value) {
  _internal_set_res(value);
  // @@protoc_insertion_point(field_set:calculator.ArithmeticOpResult.res)
}
inline ::int32_t ArithmeticOpResult::_internal_res() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.res_;
}
inline void ArithmeticOpResult::_internal_set_res(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.res_ = value;
}

// -------------------------------------------------------------------

// ComplexArithmeticOpArguments

// .calculator.OperationType optype = 1;
inline void ComplexArithmeticOpArguments::clear_optype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.optype_ = 0;
}
inline ::calculator::OperationType ComplexArithmeticOpArguments::optype() const {
  // @@protoc_insertion_point(field_get:calculator.ComplexArithmeticOpArguments.optype)
  return _internal_optype();
}
inline void ComplexArithmeticOpArguments::set_optype(::calculator::OperationType value) {
  _internal_set_optype(value);
  // @@protoc_insertion_point(field_set:calculator.ComplexArithmeticOpArguments.optype)
}
inline ::calculator::OperationType ComplexArithmeticOpArguments::_internal_optype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::calculator::OperationType>(_impl_.optype_);
}
inline void ComplexArithmeticOpArguments::_internal_set_optype(::calculator::OperationType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.optype_ = value;
}

// repeated double args = 2;
inline int ComplexArithmeticOpArguments::_internal_args_size() const {
  return _internal_args().size();
}
inline int ComplexArithmeticOpArguments::args_size() const {
  return _internal_args_size();
}
inline void ComplexArithmeticOpArguments::clear_args() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.args_.Clear();
}
inline double ComplexArithmeticOpArguments::args(int index) const {
  // @@protoc_insertion_point(field_get:calculator.ComplexArithmeticOpArguments.args)
  return _internal_args().Get(index);
}
inline void ComplexArithmeticOpArguments::set_args(int index, double value) {
  _internal_mutable_args()->Set(index, value);
  // @@protoc_insertion_point(field_set:calculator.ComplexArithmeticOpArguments.args)
}
inline void ComplexArithmeticOpArguments::add_args(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_args()->Add(value);
  // @@protoc_insertion_point(field_add:calculator.ComplexArithmeticOpArguments.args)
}
inline const ::google::protobuf::RepeatedField<double>& ComplexArithmeticOpArguments::args() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:calculator.ComplexArithmeticOpArguments.args)
  return _internal_args();
}
inline ::google::protobuf::RepeatedField<double>* ComplexArithmeticOpArguments::mutable_args()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:calculator.ComplexArithmeticOpArguments.args)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_args();
}
inline const ::google::protobuf::RepeatedField<double>&
ComplexArithmeticOpArguments::_internal_args() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.args_;
}
inline ::google::protobuf::RepeatedField<double>* ComplexArithmeticOpArguments::_internal_mutable_args() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.args_;
}

// -------------------------------------------------------------------

// ComplexArithmeticOpResult

// double res = 1;
inline void ComplexArithmeticOpResult::clear_res() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.res_ = 0;
}
inline double ComplexArithmeticOpResult::res() const {
  // @@protoc_insertion_point(field_get:calculator.ComplexArithmeticOpResult.res)
  return _internal_res();
}
inline void ComplexArithmeticOpResult::set_res(double value) {
  _internal_set_res(value);
  // @@protoc_insertion_point(field_set:calculator.ComplexArithmeticOpResult.res)
}
inline double ComplexArithmeticOpResult::_internal_res() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.res_;
}
inline void ComplexArithmeticOpResult::_internal_set_res(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.res_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace calculator


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::calculator::OperationType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::calculator::OperationType>() {
  return ::calculator::OperationType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_calculator_2eproto_2epb_2eh
